@import "ui/Styles/extends";
@import "ui/Styles/mixins";
@import "ui/Styles/variables";
@import "./variables";

/**
 * На очень маленьких размерах необходимо более эффективно использовать доступное пространство.
 * Касается как override размера через класс, так и адаптивного поведения.
 */
@mixin small-content-padding {
    .ui-lib-modal__header,
    .ui-lib-modal__body,
    .ui-lib-modal__footer {
        padding: 0.75rem;
    }

    .ui-lib-modal__header_close {
        margin: -0.25rem 0 0 0;
    }
}

.ui-lib-modal {
    @extend %fixed_fill_placement;
    display: flex;
    align-items: flex-start;
    justify-content: center;
    padding: $modal-container-padding-top 0;
    overflow-y: auto;
    background: rgba(0, 0, 0, 0.5);
}

.ui-lib-modal__background {
    @extend %fixed_fill_placement;
    right: 8px;
}

.ui-lib-modal__container {
    background: #fff;
    width: 66vw;
    min-height: 160px;
    border-radius: 5px;
    z-index: 20001;

    display: grid;
    grid-template-rows: minmax(2.5rem, auto) minmax(160px, 1fr) minmax(2.5rem, auto);

    @include extra-small {
        @include small-content-padding;
    }

    &.es {
        @include override-media-size($extra-small);
        @include small-content-padding;
    }

    &.sm {
        @include override-media-size($small);
    }

    &.md {
        @include override-media-size($medium);
    }

    &.lg {
        @include override-media-size($large);
    }

    &.el {
        @include override-media-size($extra-large);
    }

    @include extra-small {
        width: 98vw;
    }

    @include small {
        width: 90vw;
    }

    @include medium {
        width: 80vw;
    }

    @include large {
        width: 75vw;
    }

    @include extra-large {
        width: 66vw;
    }
}
